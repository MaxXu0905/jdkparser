package com.ailk.utils;import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.File;import java.io.FileNotFoundException;import java.io.FileReader;import java.io.FileWriter;import java.io.IOException;public class JSRenderParser {	public static void main(String[] args) throws Exception {		File dir = new File("/Users/freckles/Desktop/jsviews-master/demos");		iterate(dir);	}	static String preScript = "<script src=\"http://code.jquery.com/jquery.js\" type=\"text/javascript\"></script>";	static String updateScript = "<script src=\"http://cdn.bootcss.com/jquery/1.9.1/jquery.min.js\"></script>";	public static void updateFile(File file) throws Exception {		System.out.println(file.getAbsolutePath());		BufferedReader br = new BufferedReader(new FileReader(file));		StringBuilder sb = new StringBuilder();		String line = null;		while ((line = br.readLine()) != null) {			if (line.trim().equals(preScript)) {				sb.append(updateScript);			} else {				sb.append(line);			}			sb.append(System.getProperty("line.separator"));		}		br.close();		write(file.getAbsolutePath(), sb.toString());	}	public static void write(String filePath, String content) {		BufferedWriter bw = null;		try {			bw = new BufferedWriter(new FileWriter(filePath));			bw.write(content);		} catch (Exception e) {			e.printStackTrace();		} finally {			if (bw != null) {				try {					bw.close();				} catch (IOException e) {					bw = null;				}			}		}	}	public static void iterate(File file) throws Exception {		if (file.isDirectory()) {			String[] files = file.list();			for (int i = 0; i < files.length; i++) {				iterate(new File(file, files[i]));			}		} else {			updateFile(file);		}	}}